import { TwoFASchema } from '@/features/auth/types/authSchemas';
import { zodResolver } from '@hookform/resolvers/zod';
import { useForm } from 'react-hook-form';
import { z } from 'zod';
import {
  InputOTP,
  InputOTPGroup,
  InputOTPSeparator,
  InputOTPSlot,
} from '@/components/ui/input-otp';
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormMessage,
} from '@/components/ui/form';
import { useModalStore } from '@/store';

interface Props {
  handleSubmit: (code: string) => Promise<void>;
}

const TwoFAComponent = ({ handleSubmit }: Props) => {
  const { close, isOpen } = useModalStore();

  const form = useForm<z.infer<typeof TwoFASchema>>({
    resolver: zodResolver(TwoFASchema),
    defaultValues: {
      pin: '',
    },
  });

  const onSubmit = async (data: z.infer<typeof TwoFASchema>) => {
    const { pin } = data;
    await handleSubmit(pin);
    isOpen && close();
  };

  return (
    <div className="container mx-auto">
      <p className="text-sm font-normal text-gray-700 mb-4">
        Enter the one-time password generated by your authentication app.
      </p>

      <div className="flex flex-col justify-center items-center mt-10 mb-5">
        <Form {...form}>
          <form onSubmit={form.handleSubmit(onSubmit)}>
            <FormField
              control={form.control}
              name="pin"
              render={({ field }) => (
                <FormItem>
                  <FormControl>
                    <InputOTP
                      maxLength={6}
                      {...field}
                      onChange={value => {
                        field.onChange(value);
                        if (value.length === 6) {
                          form.handleSubmit(onSubmit)();
                        }
                      }}
                    >
                      <InputOTPGroup>
                        <InputOTPSlot index={0} />
                        <InputOTPSlot index={1} />
                        <InputOTPSlot index={2} />
                      </InputOTPGroup>
                      <InputOTPSeparator />
                      <InputOTPGroup>
                        <InputOTPSlot index={3} />
                        <InputOTPSlot index={4} />
                        <InputOTPSlot index={5} />
                      </InputOTPGroup>
                    </InputOTP>
                  </FormControl>
                  <FormMessage />
                </FormItem>
              )}
            />
          </form>
        </Form>
      </div>
    </div>
  );
};

export default TwoFAComponent;
